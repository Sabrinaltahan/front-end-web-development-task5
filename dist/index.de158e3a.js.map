{"mappings":"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","sources":["src/main.js"],"sourcesContent":["document.getElementById('mode-toggle').addEventListener('click', function() {\r\n    // Toggle theme class on body\r\n    document.body.classList.toggle('dark');\r\n});\r\n\r\nwindow.addEventListener('load', function() {\r\n    var loader = document.querySelector('.loader');\r\n    loader.style.display = 'none'; \r\n});\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    fetchData();\r\n});\r\n\r\n\r\n// Function to fetch data from the external source\r\nasync function fetchData() {\r\n    try {\r\n        const response = await fetch('https://studenter.miun.se/~mallar/dt211g/');\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n}\r\n\r\nfetchData().then(data => {\r\n    console.log('Data fetched:', data);\r\n    createBarChart(data);\r\n    createPieChart(data);\r\n});\r\n\r\n\r\n// Function to create a bar chart\r\nfunction createBarChart(data) {\r\n    try {\r\n        const coursesData = data.filter(entry => entry.type === 'Kurs');\r\n        const topCourses = coursesData.slice(0, 6); // Select the top 6 courses\r\n\r\n        const courseNames = topCourses.map(course => course.name);\r\n        const totalApplicants = topCourses.map(course => parseInt(course.applicantsTotal)); // Convert to integers\r\n\r\n        // console.log('Course Names:', courseNames);\r\n        // console.log('Total Applicants:', totalApplicants);\r\n\r\n        const ctx = document.getElementById('barChart').getContext('2d');\r\n        if (ctx) {\r\n            const barChart = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: courseNames,\r\n                    datasets: [{\r\n                        label: 'Total Applicants',\r\n                        data: totalApplicants,\r\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n                        borderColor: 'rgba(54, 162, 235, 1)',\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            console.error('Failed to create bar chart: Canvas element not found');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error creating bar chart:', error);\r\n    }\r\n}\r\n\r\n// Function to create a pie chart\r\nfunction createPieChart(data) {\r\n    try {\r\n        const programsData = data.filter(entry => entry.type === 'Program');\r\n\r\n        programsData.sort((a, b) => parseInt(b.applicantsTotal) - parseInt(a.applicantsTotal));\r\n\r\n        const topPrograms = programsData.slice(0, 5); // Select the top 5 programs\r\n\r\n        const programNames = topPrograms.map(program => program.name);\r\n        const totalApplicants = topPrograms.map(program => parseInt(program.applicantsTotal));\r\n\r\n        // console.log('Program Names:', programNames);\r\n        // console.log('Total Applicants:', totalApplicants);\r\n\r\n        const ctx = document.getElementById('pieChart').getContext('2d');\r\n        if (ctx) {\r\n            const pieChart = new Chart(ctx, {\r\n                type: 'pie',\r\n                data: {\r\n                    labels: programNames,\r\n                    datasets: [{\r\n                        label: 'Total Applicants',\r\n                        data: totalApplicants,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                            'rgba(54, 162, 235, 0.6)',\r\n                            'rgba(255, 206, 86, 0.6)',\r\n                            'rgba(75, 192, 192, 0.6)',\r\n                            'rgba(153, 102, 255, 0.6)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true\r\n                }\r\n            });\r\n        } else {\r\n            console.error('Failed to create pie chart: Canvas element not found');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error creating pie chart:', error);\r\n    }\r\n}\r\n\r\n\r\n\r\n//map\r\nasync function searchLocation() {\r\n    const location = document.getElementById('location').value;\r\n    if (!location) {\r\n        alert('Please enter a location.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${location}&format=json`);\r\n        const data = await response.json();\r\n        if (data && data.length > 0) {\r\n            const { lat, lon } = data[0];\r\n            showMap(lat, lon);\r\n        } else {\r\n            alert('Location not found.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching location:', error);\r\n        alert('Failed to fetch location. Please try again later.');\r\n    }\r\n}\r\n\r\nfunction showMap(lat, lon) {\r\nconst mapContainer = document.getElementById('map-container');\r\nconst url = `https://www.openstreetmap.org/export/embed.html?bbox=${lon},${lat},${lon},${lat}&layer=mapnik`;\r\nconst markerUrl = `https://www.openstreetmap.org/?mlat=${lat}&mlon=${lon}#map=15/${lat}/${lon}`;\r\nmapContainer.innerHTML = `<iframe width=\"100%\" height=\"100%\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"${url}\"></iframe><br/><small><a href=\"${markerUrl}\" target=\"_blank\">View Marker</a></small>`;\r\n}"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}