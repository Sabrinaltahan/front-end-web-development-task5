{"mappings":"ACiBA,eAAe,IACX,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,6CAE7B,OADa,MAAM,EAAS,IAAI,EAEpC,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,uBAAwB,EAC1C,CACJ,CAzBA,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,QAAS,WAE7D,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OACnC,GAEA,OAAO,gBAAgB,CAAC,OAAQ,WAE5B,AADa,SAAS,aAAa,CAAC,WAC7B,KAAK,CAAC,OAAO,CAAG,MAC3B,GAGA,SAAS,gBAAgB,CAAC,mBAAoB,WAC1C,GACJ,GAcA,IAAY,IAAI,CAAC,AAAA,IACb,QAAQ,GAAG,CAAC,gBAAiB,GAC7B,AAMJ,SAAwB,CAAI,EACxB,GAAI,CAEA,IAAM,EAAa,AADC,EAAK,MAAM,CAAC,AAAA,GAAS,AAAe,SAAf,EAAM,IAAI,EACpB,KAAK,CAAC,EAAG,GAElC,EAAc,EAAW,GAAG,CAAC,AAAA,GAAU,EAAO,IAAI,EAClD,EAAkB,EAAW,GAAG,CAAC,AAAA,GAAU,SAAS,EAAO,eAAe,GAK1E,EAAM,SAAS,cAAc,CAAC,YAAY,UAAU,CAAC,MACvD,EACiB,IAAI,MAAM,EAAK,CAC5B,KAAM,MACN,KAAM,CACF,OAAQ,EACR,SAAU,CAAC,CACP,MAAO,mBACP,KAAM,EACN,gBAAiB,0BACjB,YAAa,wBACb,YAAa,CACjB,EAAE,AACN,EACA,QAAS,CACL,OAAQ,CACJ,EAAG,CACC,YAAa,CAAA,CACjB,CACJ,CACJ,CACJ,GAEA,QAAQ,KAAK,CAAC,uDAEtB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,4BAA6B,EAC/C,CACJ,EA7CmB,GACf,AA+CJ,SAAwB,CAAI,EACxB,GAAI,CACA,IAAM,EAAe,EAAK,MAAM,CAAC,AAAA,GAAS,AAAe,YAAf,EAAM,IAAI,EAEpD,EAAa,IAAI,CAAC,CAAC,EAAG,IAAM,SAAS,EAAE,eAAe,EAAI,SAAS,EAAE,eAAe,GAEpF,IAAM,EAAc,EAAa,KAAK,CAAC,EAAG,GAEpC,EAAe,EAAY,GAAG,CAAC,AAAA,GAAW,EAAQ,IAAI,EACtD,EAAkB,EAAY,GAAG,CAAC,AAAA,GAAW,SAAS,EAAQ,eAAe,GAK7E,EAAM,SAAS,cAAc,CAAC,YAAY,UAAU,CAAC,MACvD,EACiB,IAAI,MAAM,EAAK,CAC5B,KAAM,MACN,KAAM,CACF,OAAQ,EACR,SAAU,CAAC,CACP,MAAO,mBACP,KAAM,EACN,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACH,CACD,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACH,CACD,YAAa,CACjB,EAAE,AACN,EACA,QAAS,CACL,WAAY,CAAA,CAChB,CACJ,GAEA,QAAQ,KAAK,CAAC,uDAEtB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,4BAA6B,EAC/C,CACJ,EAjGmB,EACnB","sources":["<anon>","src/main.js"],"sourcesContent":["document.getElementById(\"mode-toggle\").addEventListener(\"click\", function() {\n    // Toggle theme class on body\n    document.body.classList.toggle(\"dark\");\n});\nwindow.addEventListener(\"load\", function() {\n    var loader = document.querySelector(\".loader\");\n    loader.style.display = \"none\";\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    fetchData();\n});\n// Function to fetch data from the external source\nasync function fetchData() {\n    try {\n        const response = await fetch(\"https://studenter.miun.se/~mallar/dt211g/\");\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n    }\n}\nfetchData().then((data)=>{\n    console.log(\"Data fetched:\", data);\n    createBarChart(data);\n    createPieChart(data);\n});\n// Function to create a bar chart\nfunction createBarChart(data) {\n    try {\n        const coursesData = data.filter((entry)=>entry.type === \"Kurs\");\n        const topCourses = coursesData.slice(0, 6); // Select the top 6 courses\n        const courseNames = topCourses.map((course)=>course.name);\n        const totalApplicants = topCourses.map((course)=>parseInt(course.applicantsTotal)); // Convert to integers\n        // console.log('Course Names:', courseNames);\n        // console.log('Total Applicants:', totalApplicants);\n        const ctx = document.getElementById(\"barChart\").getContext(\"2d\");\n        if (ctx) {\n            const barChart = new Chart(ctx, {\n                type: \"bar\",\n                data: {\n                    labels: courseNames,\n                    datasets: [\n                        {\n                            label: \"Total Applicants\",\n                            data: totalApplicants,\n                            backgroundColor: \"rgba(54, 162, 235, 0.6)\",\n                            borderColor: \"rgba(54, 162, 235, 1)\",\n                            borderWidth: 1\n                        }\n                    ]\n                },\n                options: {\n                    scales: {\n                        y: {\n                            beginAtZero: true\n                        }\n                    }\n                }\n            });\n        } else console.error(\"Failed to create bar chart: Canvas element not found\");\n    } catch (error) {\n        console.error(\"Error creating bar chart:\", error);\n    }\n}\n// Function to create a pie chart\nfunction createPieChart(data) {\n    try {\n        const programsData = data.filter((entry)=>entry.type === \"Program\");\n        programsData.sort((a, b)=>parseInt(b.applicantsTotal) - parseInt(a.applicantsTotal));\n        const topPrograms = programsData.slice(0, 5); // Select the top 5 programs\n        const programNames = topPrograms.map((program)=>program.name);\n        const totalApplicants = topPrograms.map((program)=>parseInt(program.applicantsTotal));\n        // console.log('Program Names:', programNames);\n        // console.log('Total Applicants:', totalApplicants);\n        const ctx = document.getElementById(\"pieChart\").getContext(\"2d\");\n        if (ctx) {\n            const pieChart = new Chart(ctx, {\n                type: \"pie\",\n                data: {\n                    labels: programNames,\n                    datasets: [\n                        {\n                            label: \"Total Applicants\",\n                            data: totalApplicants,\n                            backgroundColor: [\n                                \"rgba(255, 99, 132, 0.6)\",\n                                \"rgba(54, 162, 235, 0.6)\",\n                                \"rgba(255, 206, 86, 0.6)\",\n                                \"rgba(75, 192, 192, 0.6)\",\n                                \"rgba(153, 102, 255, 0.6)\"\n                            ],\n                            borderColor: [\n                                \"rgba(255, 99, 132, 1)\",\n                                \"rgba(54, 162, 235, 1)\",\n                                \"rgba(255, 206, 86, 1)\",\n                                \"rgba(75, 192, 192, 1)\",\n                                \"rgba(153, 102, 255, 1)\"\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                },\n                options: {\n                    responsive: true\n                }\n            });\n        } else console.error(\"Failed to create pie chart: Canvas element not found\");\n    } catch (error) {\n        console.error(\"Error creating pie chart:\", error);\n    }\n}\n//map\nasync function searchLocation() {\n    const location = document.getElementById(\"location\").value;\n    if (!location) {\n        alert(\"Please enter a location.\");\n        return;\n    }\n    try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${location}&format=json`);\n        const data = await response.json();\n        if (data && data.length > 0) {\n            const { lat, lon } = data[0];\n            showMap(lat, lon);\n        } else alert(\"Location not found.\");\n    } catch (error) {\n        console.error(\"Error fetching location:\", error);\n        alert(\"Failed to fetch location. Please try again later.\");\n    }\n}\nfunction showMap(lat, lon) {\n    const mapContainer = document.getElementById(\"map-container\");\n    const url = `https://www.openstreetmap.org/export/embed.html?bbox=${lon},${lat},${lon},${lat}&layer=mapnik`;\n    const markerUrl = `https://www.openstreetmap.org/?mlat=${lat}&mlon=${lon}#map=15/${lat}/${lon}`;\n    mapContainer.innerHTML = `<iframe width=\"100%\" height=\"100%\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"${url}\"></iframe><br/><small><a href=\"${markerUrl}\" target=\"_blank\">View Marker</a></small>`;\n}\n\n//# sourceMappingURL=index.55166fd0.js.map\n","document.getElementById('mode-toggle').addEventListener('click', function() {\r\n    // Toggle theme class on body\r\n    document.body.classList.toggle('dark');\r\n});\r\n\r\nwindow.addEventListener('load', function() {\r\n    var loader = document.querySelector('.loader');\r\n    loader.style.display = 'none'; \r\n});\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    fetchData();\r\n});\r\n\r\n\r\n// Function to fetch data from the external source\r\nasync function fetchData() {\r\n    try {\r\n        const response = await fetch('https://studenter.miun.se/~mallar/dt211g/');\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n}\r\n\r\nfetchData().then(data => {\r\n    console.log('Data fetched:', data);\r\n    createBarChart(data);\r\n    createPieChart(data);\r\n});\r\n\r\n\r\n// Function to create a bar chart\r\nfunction createBarChart(data) {\r\n    try {\r\n        const coursesData = data.filter(entry => entry.type === 'Kurs');\r\n        const topCourses = coursesData.slice(0, 6); // Select the top 6 courses\r\n\r\n        const courseNames = topCourses.map(course => course.name);\r\n        const totalApplicants = topCourses.map(course => parseInt(course.applicantsTotal)); // Convert to integers\r\n\r\n        // console.log('Course Names:', courseNames);\r\n        // console.log('Total Applicants:', totalApplicants);\r\n\r\n        const ctx = document.getElementById('barChart').getContext('2d');\r\n        if (ctx) {\r\n            const barChart = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: courseNames,\r\n                    datasets: [{\r\n                        label: 'Total Applicants',\r\n                        data: totalApplicants,\r\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n                        borderColor: 'rgba(54, 162, 235, 1)',\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            console.error('Failed to create bar chart: Canvas element not found');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error creating bar chart:', error);\r\n    }\r\n}\r\n\r\n// Function to create a pie chart\r\nfunction createPieChart(data) {\r\n    try {\r\n        const programsData = data.filter(entry => entry.type === 'Program');\r\n\r\n        programsData.sort((a, b) => parseInt(b.applicantsTotal) - parseInt(a.applicantsTotal));\r\n\r\n        const topPrograms = programsData.slice(0, 5); // Select the top 5 programs\r\n\r\n        const programNames = topPrograms.map(program => program.name);\r\n        const totalApplicants = topPrograms.map(program => parseInt(program.applicantsTotal));\r\n\r\n        // console.log('Program Names:', programNames);\r\n        // console.log('Total Applicants:', totalApplicants);\r\n\r\n        const ctx = document.getElementById('pieChart').getContext('2d');\r\n        if (ctx) {\r\n            const pieChart = new Chart(ctx, {\r\n                type: 'pie',\r\n                data: {\r\n                    labels: programNames,\r\n                    datasets: [{\r\n                        label: 'Total Applicants',\r\n                        data: totalApplicants,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                            'rgba(54, 162, 235, 0.6)',\r\n                            'rgba(255, 206, 86, 0.6)',\r\n                            'rgba(75, 192, 192, 0.6)',\r\n                            'rgba(153, 102, 255, 0.6)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true\r\n                }\r\n            });\r\n        } else {\r\n            console.error('Failed to create pie chart: Canvas element not found');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error creating pie chart:', error);\r\n    }\r\n}\r\n\r\n\r\n\r\n//map\r\nasync function searchLocation() {\r\n    const location = document.getElementById('location').value;\r\n    if (!location) {\r\n        alert('Please enter a location.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${location}&format=json`);\r\n        const data = await response.json();\r\n        if (data && data.length > 0) {\r\n            const { lat, lon } = data[0];\r\n            showMap(lat, lon);\r\n        } else {\r\n            alert('Location not found.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching location:', error);\r\n        alert('Failed to fetch location. Please try again later.');\r\n    }\r\n}\r\n\r\nfunction showMap(lat, lon) {\r\nconst mapContainer = document.getElementById('map-container');\r\nconst url = `https://www.openstreetmap.org/export/embed.html?bbox=${lon},${lat},${lon},${lat}&layer=mapnik`;\r\nconst markerUrl = `https://www.openstreetmap.org/?mlat=${lat}&mlon=${lon}#map=15/${lat}/${lon}`;\r\nmapContainer.innerHTML = `<iframe width=\"100%\" height=\"100%\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"${url}\"></iframe><br/><small><a href=\"${markerUrl}\" target=\"_blank\">View Marker</a></small>`;\r\n}"],"names":["fetchData","response","fetch","json","error","console","document","getElementById","addEventListener","body","classList","toggle","window","loader","querySelector","style","display","then","data","log","createBarChart","topCourses","coursesData","filter","entry","type","slice","courseNames","map","course","name","totalApplicants","parseInt","applicantsTotal","ctx","getContext","Chart","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","createPieChart","programsData","sort","a","b","topPrograms","programNames","program","responsive"],"version":3,"file":"index.55166fd0.js.map"}